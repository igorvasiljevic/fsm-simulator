let version="0.2",CACHE_NAME="fsm-simulator-cache-"+version,urlsToCache=["./","./index.html","./simulator.html","./lessons/1.html","./lessons/2.html","./lessons/3.html","./lessons/4.html","./index.js","./manifest.webmanifest","./css/styles.css","./src/core.js","./src/fsm.js","./src/simulator.js","./res/add_transition.svg","./res/appleicon.png","./res/delete.svg","./res/grid.svg","./res/icon.png","./res/more.svg","./res/run.svg","./res/set_final_state.svg","./res/set_initial_state.svg","./res/step.svg","./res/theme.svg"];self.addEventListener("install",s=>{self.skipWaiting(),s.waitUntil(caches.open(CACHE_NAME).then(s=>s.addAll(urlsToCache)))}),self.addEventListener("activate",s=>s.waitUntil(caches.keys().then(s=>Promise.all(s.filter(s=>s!=CACHE_NAME).map(s=>caches.delete(s)))))),self.addEventListener("fetch",s=>s.respondWith(caches.match(s.request).then(e=>e||fetch(s.request).then(e=>{if(!e||200!==e.status||"basic"!==e.type)return e;const t=e.clone();return caches.open(CACHE_NAME).then(e=>e.put(s.request,t)),e})).catch(s=>console.log(s))));